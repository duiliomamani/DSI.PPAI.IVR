@using DSI.PPAI.IVR.Pages.Home.Components
@using Microsoft.AspNetCore.Components.Authorization
@inject ContainerValues _containerValues;


@page "/operator/call"
<AuthorizeView>
    <Authorized>
        <div class="container-fluid">
            <div class="px-3 py-4">
                <div class="row">
                    <div class="col-md-4">
                        <div class="card mb-4 shadow-sm">
                            <img class="card-img-top w-75" src="/images/ivr_image_1.jpeg" alt="IVR-Background">
                            <div class="card-body">
                                <h4 class="card-title">
                                    Cliente: @datosLlamada
                                </h4>
                                <h5 class="card-subtitle">
                                    Categoria: @nombreCategoria
                                </h5>
                                <br />
                                <p class="card-text">
                                    Opcion: @nombreOpcion
                                    <br />
                                    Subopcion: @nombreSubOpcion
                                </p>
                            </div>
                            <ul class="list-group list-group-flush">
                                <li class="list-group-item"> <b>Validaciones</b></li>
                                @foreach (var v in datosValidaciones)
                                {
                                    <li class="list-group-item">@v</li>
                                }
                            </ul>
                            <div class="card-footer">
                                <div class="d-flex justify-content-between align-items-center">
                                    <button type="button" class="btn btn-outline-dark">View</button>
                                    <small class="text-muted">9 mins</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <p>I'm sorry, I can't display anything until you log in</p>
    </NotAuthorized>
</AuthorizeView>

@code {

    [Parameter]
    public string datosLlamada { get; set; }
    [Parameter]
    public string nombreOpcion { get; set; }
    [Parameter]
    public string nombreSubOpcion { get; set; }
    [Parameter]
    public string nombreCategoria { get; set; }
    [Parameter]
    public IList<string> datosValidaciones { get; set; }

    //Metodo Habilitar Pantalla
    protected override async Task OnInitializedAsync()
    {
        await mostrarDatosDeLlamada();
        await mostrarDatosValidaciones();
    }

    private async Task mostrarDatosDeLlamada()
    {
        datosLlamada = (string)_containerValues.Value["datosLlamada"];
        nombreOpcion = (string)_containerValues.Value["nombreOpcion"];
        nombreSubOpcion = (string)_containerValues.Value["nombreSubOpcion"];
        nombreCategoria = (string)_containerValues.Value["nombreCategoria"];
    }
    private async Task mostrarDatosValidaciones()
    {
        datosValidaciones = (IList<string>)_containerValues.Value["datosValidaciones"];
    }
}